@charset "utf-8";
@import 'reset.scss';

main{
    width: 100%;
    height: 100vh;
    position: relative;
    background-color: #333;
    section{
        article{
            width: 26vw;
            height: 80vh;
            background-color: #fff;
            position: fixed;
            top: 50%;
            left: 50%;
            margin-top: -40vh;
            margin-left: -13vw;
            z-index: 1;
            overflow: hidden;
            // transition: all 1s;
            transition-property: width, height, transform, opacity, margin-left, margin-top, top, left;
            /*
            all을 사용하면 모든 css속성에 대하여 transition을 적용할 수 있지만 이것은 성능상 부담을 초래합니다.
            즉, 필요한 요소뿐이 아니라 불필요한 요소도 상태변화가 있을 때 마다 transition을 발생하게 되면서
            성능 저하가 일어날 수 있습니다.
            특히 크기, 위치 등 자주 변하는 속성들인데 transition이 현재 필요하지 않지만
            all을 사용하면 성능 저하가 심각해질 수 있습니다.
            따라서 필요한 속성들에 대해서만 명시적으로 직접 지정해주는 것이 정교한 제어와 성능 문제도 해결할 수 있습니다.
            */
            transition-duration: 0.5s;
            transition-delay: 0s;
            display: flex;
            justify-content: center;
            align-items: center;
            .open{
                cursor: pointer;
                // 공통적인 요소
                margin-top: 1000px;
                opacity: 0;
                // transition: all 0.5s;
                transition: opacity 0.5s, margin-top 0.5s;
                transition-property: opacity, margin-top;
                transition-duration: 0.5s;
            }
            .close{
                cursor: pointer;
                position: absolute;
                top: 10vh;
                right: -10vw;
                opacity: 0;
                transition: all 0.5s;
            }
            /*
            nth-of-type 방식 vs data-index 방식
            data-index는 개발자의 의도와 개입이 자유로운 반면,
            nth-of-type은 이미 정해져 있는 index에서 순환하기 때문에 순서에 개입이 어렵습니다.
            또한 data-index는 정확한 li의 스타일을 고정할 수 있습니다.
            */

            &:nth-of-type(1){
                transform: translateX(-400%) translateY(200%);
                opacity: 0;
            }
            &:nth-of-type(2){
                transform: translateX(-130%) translateY(40%);
                opacity: 0.7;
            }
            &:nth-of-type(3){
                transform: translateX(0%) translateY(0%);
                opacity: 1;
                .open{
                    margin-top: 0;
                    opacity: 1;
                }
            }
            &:nth-of-type(4){
                transform: translateX(130%) translateY(-40%);
                opacity: 0.7;
            }
            &:nth-of-type(5){
                transform: translateX(400%) translateY(-200%);
                opacity: 0;
            }
        }
        article.on{
            width: 100%;
            height: 100%;
            margin-top: 0;
            margin-left: 0;
            top: 0;
            left: 0;
            z-index: 2;
            transition-duration: 0.8s;
            transition-delay: 0.5s;

            .open{
                margin-top: 1000px;
                opacity: 0;
            }
            .close{
                top: 10vh;
                right: 10vw;
                opacity: 1;
                transition: 0.5s 1s;
                transition-timing-function: cubic-bezier(0.48, -0.67, 0.54, 1.68);
            }   
        }
        article.hide{
            margin-top: -1000px;
            opacity: 0;
            transition-delay: 0s;
        }
    }
    nav{
        position: absolute;
        bottom: 10vh;
        right: 10vw;
        display: flex;
        gap: 30px;
        p{
            color: #fff;
            cursor: pointer;
        }
    }
}